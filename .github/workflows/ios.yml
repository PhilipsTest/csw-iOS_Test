name: iOS starter workflow

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
  pull_request:
    branches: [ feature/GitHub_Actions ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3
        with: 
          fetch-depth: 0
          clean: true
          submodules: true
          lfs: false
      
      #- name: Initialize
       # shell: sh
        #run: |
         #    pwd
          #   rm -rf Source/results/*
           #  rm -rf Source/build/*.ipa
            # rm -rf ~/Library/Developer/Xcode/DerivedData
             #rm -rf Source/DerivedData
             #./ci-build-support/update_version.sh
             #rm -rf ./Source/Library/Podfile.lock
             #echo "Running pod install for ${podfilePath}"
             #cd ./Source/Library && pod cache clean --all && pod repo update && pod install
             
      # extract branch name
      #- name: Extract branch name
      #  if: github.event_name != 'pull_request'
      #  shell: bash
      #  run: echo "::set-env name=BRANCH_NAME::$(echo ${GITHUB_REF#refs/heads/})"
      #  id: extract_branch
      
      - name: Zip Components
        if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/release/platform_')
        shell: bash
        run: |
             PODSPEC_PATH="ci-build-support/Versions.rb"
             COMMIT_HASH=`git rev-parse HEAD`
             
             export ZIPFOLDER="Zips"
             cd Source
             mkdir -p "${ZIPFOLDER}"
             mkdir -p "${ZIPFOLDER}/Source"
             echo "Zipping started"
             for i in */; do
                 if [ "$i" == "Library/" ] ; then
                     export ZIPPATH="${ZIPFOLDER}/${i%/}_${COMMIT_HASH}.zip"
                     echo "Creating zip for Component ${i} in path ${ZIPPATH}"
                     cp -R "${i}" "${ZIPFOLDER}/Source/${i}"
                     cd ${ZIPFOLDER}
                     zip -r "../${ZIPPATH}" "Source/${i}"
                     rm -rf Source/*
                     cd -
                 fi
             done
             echo "Zipping ended"
      
      - name: Run Unit Tests
        env:
          testSchemeName: ${{ 'ConsentWidgetsDev' }}
          frameworkName: ${{ 'CSW Test Report' }}
          resultBundlePath: ${{ 'results/$testSchemeName' }}
        run: |
             export PATH=/.rbenv/shims:/usr/local/bin/xcpretty/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
             killall Simulator || true
             xcrun simctl erase all || true
             cd Source/Library
             
             export LC_CTYPE=en_US.UTF-8
             xcodebuild clean test \
                     -workspace "ConsentWidgets.xcworkspace" \
                     -scheme ${testSchemeName} CLANG_WARN_DOCUMENTATION_COMMENTS='NO'\
                     -destination 'platform=iOS Simulator,name=iPhone 8,OS=latest'\
                     -UseModernBuildSystem='NO'\
                     -resultBundlePath ${resultBundlePath} \
                     | xcpretty --report junit --report html
      
      - name: Publish Zips
        if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/release/platform_')
        shell: bash
        run: |
             ./publish_zips.sh
             
      - name: Publish Podspecs
        if: startsWith(github.ref, 'refs/heads/develop') || startsWith(github.ref, 'refs/heads/release/platform_')
        #publish("./ConsentWidgets.podspec", "./Source/Library/Podfile.lock")
        #def publish(String podspecPath, String podfileLockPath)  
        env:
          podspecPath: ${{ './ConsentWidgets.podspec' }}
          podfileLockPath: ${{ './Source/Library/Podfile.lock' }}
        run: |
             echo "${{ github.ref }}"
             echo "${GITHUB_REF#refs/heads/}"
             chmod 755 ./ci-build-support/substitute_version.groovy
             ci-build-support/substitute_version.groovy ${podspecPath}
             ci-build-support/podspec_push.sh ${podspecPath} ${GITHUB_REF#refs/heads/}
